rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    // Match the path for vendor snaps.
    // Ensure the user is authenticated and the file size is within limits.
    // The user's UID must match the {userId} in the path.
    match /vendors/{userId}/snaps/{allPaths=**} {
      allow read; // Anyone can read snaps
      // ✅ DEVELOPMENT FIX: More permissive rules for emulator auth issues
      allow write: if request.auth != null &&
                      request.auth.uid == userId &&
                      request.resource.size < 2 * 1024 * 1024; // 2 MB limit (increased for videos)
    }

    // Match the path for vendor avatars.
    // Ensure the user is authenticated and is uploading to their own avatar path.
    match /vendors/{userId}/avatar/{fileName} {
      allow read; // Publicly readable
      allow write: if request.auth != null &&
                      request.auth.uid == userId &&
                      request.resource.size < 500 * 1024 && // 500 KB limit
                      request.resource.contentType.matches('image/.*'); // Image files only
    }

    // ✅ DEVELOPMENT FIX: Temporary permissive rule for debugging
    // Remove this in production!
    match /{allPaths=**} {
      allow read, write: if request.auth != null;
    }
  }
}
