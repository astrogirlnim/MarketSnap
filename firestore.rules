rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Vendors: Publicly readable, but only the vendor can write to their own document.
    match /vendors/{vendorId} {
      allow read;
      allow create, update, delete: if request.auth != null && request.auth.uid == vendorId;
    }

    // Snaps: Publicly readable, but only the authenticated vendor can create, update, or delete their own snaps.
    match /snaps/{snapId} {
      allow read;
      allow create: if request.auth != null && request.resource.data.vendorUid == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.vendorUid == request.auth.uid;
    }

    // Broadcasts: Publicly readable, but only the authenticated vendor can create, update, or delete their own broadcasts.
    match /broadcasts/{broadcastId} {
      allow read;
      allow create: if request.auth != null && request.resource.data.vendorUid == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.vendorUid == request.auth.uid;
    }

    // Followers: Users can follow/unfollow vendors.
    // A user can create a document if they are the follower.
    // A user can delete a document if they are the follower.
    match /followers/{followerId} {
      allow read;
      allow create: if request.auth != null && request.resource.data.followerUid == request.auth.uid;
      allow delete: if request.auth != null && resource.data.followerUid == request.auth.uid;
    }
  }
} 